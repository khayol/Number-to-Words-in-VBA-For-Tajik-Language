#pragma checksum "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cecae75f10592dae6677cee98f6209b611ea305c"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Woorj.Pages.WrComponents
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Toolbelt.Blazor.HeadElement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Blazored.Menu;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Blazored.FluentValidation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Data.WrComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Data.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Data.Adm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Data.Dir;

#line default
#line hidden
#nullable disable
#nullable restore
#line 36 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Data.IndOrg;

#line default
#line hidden
#nullable disable
#nullable restore
#line 38 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.CtrServerSide.Adm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.CtrServerSide.Dir;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.CtrServerSide.IndOrg;

#line default
#line hidden
#nullable disable
#nullable restore
#line 53 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Pages.WrComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 54 "E:\A_NewProjects\01\Woorj\_Imports.razor"
using Woorj.Pages.TESTS.L22;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
    public partial class WrDataGrid<TItem> : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 201 "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor"
         

   
#region  Declare_Region

private string ErrorMessage;

[Parameter] public string BaseUrlUri { get; set;}
[Parameter] public string BackLink { get; set;}
[Parameter] public string ColumnsToExcludeCSV { get; set;}
[Parameter] public string UniqIdOfRecord { get; set;}
[Parameter] public string PageNameTitle { get; set; }
[Parameter] public int CurrentPage { get; set; } = 1;
[Parameter] public bool RowSelectFlg { get; set; } = false;
[Parameter] public RenderFragment ControlMenu { get; set; }
[Parameter] public RenderFragment ControlQuickAccess { get; set; }
[Parameter] public PagingConfig Paging { get; set; } = new PagingConfig();
[Parameter] public RenderFragment CustomPager { get; set; }
[Parameter] public RenderFragment PageName { get; set; }
[Parameter] public List<TItem> DataItems { get; set; }
[Parameter] public List<ColumnDefinition> Columns { get; set; }
[Parameter] public EventCallback<string> SelectedRow { get; set; } 
[Parameter] public EventCallback<string> RefName { get; set; } 

#endregion  Declare_Region

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("SelectedCellColorChange");        
    }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        ValidateDefinitions();
    }

    public async Task ClickOnTheRecord(string pIdOfRecord)
    {
        await SelectedRow.InvokeAsync(pIdOfRecord);
        await JSRuntime.InvokeVoidAsync("SelectedCellColorChange");
    }
    
    public async Task MouseEvnt(string pRefName)
    {   
        await RefName.InvokeAsync(pRefName);
    }

    public async Task DoubleClickOnTheData(TItem item, ColumnDefinition column, string pCurrLink, string pIdOfRecord,
                                        string pColName, string pIdOfFieldKey, string pLinkAddress, string pCellValue )
    {
        await SelectedRow.InvokeAsync(pIdOfRecord);
       // await JSRuntime.InvokeVoidAsync("SelectedCellColorChange");
       
       if (string.IsNullOrEmpty(pLinkAddress) && RowSelectFlg==true){
         
             int IdSelected= int.Parse(typeof(TItem).GetProperty("Id").GetValue(item).ToString());
               /*
                Console.WriteLine("===================================");
                
                Console.WriteLine("-----------EF Fitures ----------");
                //string x = typeof(TItem).GetProperty("GenderId").GetValue(item).ToString();
                Console.WriteLine("column.DataField= "+column.DataField);
                Console.WriteLine("typeof(TItem).ToString()= "+typeof(TItem).ToString());
                Console.WriteLine("typeof(TItem).GetProperty(column.DataField).ToString()= "+typeof(TItem).GetProperty(column.DataField).ToString());
                Console.WriteLine("typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString()= "+typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString());
                Console.WriteLine("typeof(TItem).GetProperty(\"Id\").GetValue(item).ToString()= "+typeof(TItem).GetProperty("Id").GetValue(item).ToString());
                Console.WriteLine("-----------Method Parameters ----------");
                Console.WriteLine("pCurrLink= "+pCurrLink);
                Console.WriteLine("pIdOfRecord= "+pIdOfRecord);
                Console.WriteLine("pColName= "+pColName);
                Console.WriteLine("pIdOfFieldKey= "+pIdOfFieldKey);
                Console.WriteLine("pLinkAddress= "+pLinkAddress);
                Console.WriteLine("pCellValue= "+pCellValue);
                Console.WriteLine("-----------AppData------------");
                Console.WriteLine("AppData.ChoosedEntityName="+AppData.ChoosedEntityName);
                Console.WriteLine("AppData.ChoosedEntityId= "+AppData.ChoosedEntityId);
                Console.WriteLine("AppData.ChoosedEntityFK= "+AppData.ChoosedEntityFK);
                Console.WriteLine("int.Parse(pIdOfRecord)= "+pIdOfRecord);
                Console.WriteLine("----------ACTION-------------");
                */
                 /*
                // It's working well but we need to show the rusults after every UI updating  
                GnrSrv.UpdateReleatedData(AppData.ChoosedEntityName,AppData.ChoosedEntityId, 
                                          AppData.ChoosedEntityFK,int.Parse(pIdOfRecord));
                */

                 GnrSrv.UpdateReleatedDataMain(AppData.ChoosedEntityId,AppData.ChoosedEntityFK,IdSelected,AppData.ChoosedEntityName);
                 AppData.GoBrwsNavigation(-1);
              
          
       }else
         {
            /*
            // Go to the Entity from the WrDataGrid List
            if (string.IsNullOrEmpty(pIdOfFieldKey)){ 
            NavManager.NavigateTo(pLinkAddress+pIdOfRecord);
            }else{

            NavManager.NavigateTo(pLinkAddress+pIdOfFieldKey);
            }
            */
       }        
    }

    private void ValidateDefinitions()
    {
        this.ErrorMessage = string.Empty;

         

#line default
#line hidden
#nullable disable
#nullable restore
#line 320 "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor"
            

        if (Columns.Count(x => x.SortDirection != SortDirection.NotSet) > 1)
        {
            ErrorMessage = StatCls.GetTranslation("MultSortNotSupported",@AppData.ActiveUser,"Msg");//GlobVarStat.sortMult_msg;
            return;
        } 
    }

    private void SortData(ColumnDefinition sortByColumn = null)
    {
        if (sortByColumn == null) sortByColumn = Columns.FirstOrDefault(x => x.SortDirection != SortDirection.NotSet);
        if (sortByColumn == null) return;

        foreach (var column in Columns)
        {
            if (column.DataField != sortByColumn.DataField) column.SortDirection = SortDirection.NotSet;
        }

        switch (sortByColumn.SortDirection)
        {
            case SortDirection.NotSet:
                sortByColumn.SortDirection = SortDirection.Asc;
                break;
            case SortDirection.Asc:
                sortByColumn.SortDirection = SortDirection.Desc;
                break;
            case SortDirection.Desc:
                sortByColumn.SortDirection = SortDirection.Asc;
                break;
            default:
                sortByColumn.SortDirection = SortDirection.Asc;
                break;
        }

        if (sortByColumn.SortDirection == SortDirection.Asc)
        {

            DataItems.Sort((x, y) => (typeof(TItem).GetProperty(sortByColumn.DataField).GetValue(x)?.ToString() ?? GlobVarStat.nullval)
                .CompareTo(typeof(TItem).GetProperty(sortByColumn.DataField).GetValue(y)?.ToString() ?? GlobVarStat.nullval));
        }
        else
        {
            DataItems.Sort((x, y) => (typeof(TItem).GetProperty(sortByColumn.DataField).GetValue(y)?.ToString() ?? GlobVarStat.nullval)
                .CompareTo(typeof(TItem).GetProperty(sortByColumn.DataField).GetValue(x)?.ToString() ?? GlobVarStat.nullval));
        }

    }


    public void GoToPrevPage()
    {
        CurrentPage = Paging.PrevPageNumber(CurrentPage);
        JSRuntime.InvokeVoidAsync("ResetSelectedRowColorChange");
    }

    public void GoToFirstPage()
    {
        CurrentPage = 1;
         JSRuntime.InvokeVoidAsync("ResetSelectedRowColorChange");
    }
    public void GoToLastPage()
    {
        CurrentPage = MaxPageNumber;
         JSRuntime.InvokeVoidAsync("ResetSelectedRowColorChange");
    }

    public int GetCurrentPage()
    {
        return CurrentPage;     
           
    }

    public void GoToNextPage()
    {
        CurrentPage = Paging.NextPageNumber(CurrentPage, DataItems.Count);
         JSRuntime.InvokeVoidAsync("ResetSelectedRowColorChange");
    }
    public void GoToPageN(int n)
    {
        CurrentPage = n;
         JSRuntime.InvokeVoidAsync("ResetSelectedRowColorChange");
    }
    public int  GetGoToPageN(int n)
    {
        CurrentPage = n;
        return CurrentPage;
    }

    public int MaxPageNumber { get => Paging.MaxPageNumber(DataItems.Count); }

    #region Html_Markup_Cleanup

    private string SortClass(ColumnDefinition column)
    {
        if (column.SortDirection != SortDirection.NotSet)
        {
            return $"sort {column.SortDirection.ToString().ToLower()}";
        }

        return "no-sort";
    }

    private string AlignmentClass(ColumnDefinition column)
    {
        string alignmentClass;

        switch (column.Alignment)
        {
            case Alignment.Left:
                alignmentClass = "align-left";
                break;
            case Alignment.Center:
                alignmentClass = "align-center";
                break;
            case Alignment.Right:
                alignmentClass = "align-right";
                break;
            case Alignment.NotSet:
            default:
                alignmentClass = string.Empty;
                break;
        }

        return alignmentClass;
    }

    private string FontStyleHeader(ColumnDefinition column)
    {
        string fontStyle;
        string linkStyle=GlobVarStat.linkStyle; // dark Blue
        string staticDataStyle=GlobVarStat.staticDataStyle;

        switch (column.DataType)
        {
            
            case DataType.Collection: 
            case DataType.List:
            case DataType.LinkLine: 
            case DataType.RelatedData: 
                fontStyle = linkStyle; 
                break;
            case DataType.NotSet: 
                fontStyle =staticDataStyle;
                break;
            default:
                fontStyle =staticDataStyle;
                break;
        }

        return fontStyle;
    }

    private string FormatItemValue(TItem item, ColumnDefinition column, string pIdOfRecord)
    {
        #nullable enable
                string? value = string.Empty;
        #nullable restore
        if ((!string.IsNullOrWhiteSpace(column.Format) && column.DataType != DataType.NotSet) || column.DataType == DataType.List || column.DataType == DataType.Collection || column.DataType == DataType.RelatedData)
        {
            switch (column.DataType)
            {
                case DataType.Date:
                case DataType.DateTime:
                      value = typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString() ?? GlobVarStat.nullval;
                    //value = DateTime.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()).ToString(column.Format);
                    //value=DateTime.Parse(value).ToString("dd-MM-yyyy");
                    //value=DateTime.ParseExact(value,"dd-MM-yyyy", CultureInfo.CreateSpecificCulture("fr-FR")).ToString();
                   if (value == GlobVarStat.date_1900 || value == GlobVarStat.date_0001)
                    {
                    value = GlobVarStat.nullval; //"nullval";
                    }
                    break;
                case DataType.Boolean:
                    value = bool.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()).ToString();
                    break;
                case DataType.Currency:
                    value = Math.Round(double.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()), 2).ToString("c");
                    break;
                case DataType.RelatedData:
               
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 516 "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor"
                   

                // value = typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString() ?? GlobVarStat.nullval;
                //string x = typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString();
                
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 527 "E:\A_NewProjects\01\Woorj\Pages\WrComponents\WrDataGrid.razor"
                   
                 
                    string SelectedFieldKey = typeof(TItem).GetProperty(column.SelectedFieldKey).GetValue(item)?.ToString() ?? GlobVarStat.nullval;
                    value= GnrSrv.GetReleatedData(column.DataField, column.SelectedField, SelectedFieldKey);                     
                    break;
                case DataType.Collection:
                case DataType.List:
                  value= GnrSrv.ExistDataORNotFlag(column.DataField, typeof(TItem).Name+"Id", pIdOfRecord); 
                   break;
                default:
                    break;
            }
        }
        else
        {
            value = typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString() ?? GlobVarStat.nullval;
              
              if (GnrSrv.IsValidDateTime(value)){
              value=DateTime.Parse(value).ToString("dd-MM-yyyy");
              }

            if (value == GlobVarStat.date_1900 || value == GlobVarStat.date_0001)
            {
                value = GlobVarStat.nullval; //"nullval";
            }

            switch (column.DataType)
            {
               case DataType.Collection:
                case DataType.List:
                    value =GlobVarStat.dataArrEmpty; //"{...}";
                    break;
                case DataType.RelatedData:
                  value =  typeof(TItem).GetProperty(column.DataField).GetValue(item)?.ToString() ?? GlobVarStat.nullval; //"RelatedData_Null";//
                    break;    
                default:
                    break;
            }

        }

        return value;
    }

    #endregion Html_Markup_Cleanup

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private GnrSrv GnrSrv { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavMeths NavMeths { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppData AppData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpContextAccessor hca { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAdmService admSer { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICoreService serv { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomTranslator trs { get; set; }
    }
}
#pragma warning restore 1591

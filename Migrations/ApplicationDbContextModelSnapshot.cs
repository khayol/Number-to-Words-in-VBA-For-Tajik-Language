// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Woorj.Data;

namespace Woorj.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.AccessRightCode", "'AccessRightCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.AccessRightTypeCode", "'AccessRightTypeCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.ApplicationRoleCode", "'ApplicationRoleCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.ApplicationUserCode", "'ApplicationUserCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.ContactCode", "'ContactCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CountryCode", "'CountryCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.GenderCode", "'GenderCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.GlobalVariableCode", "'GlobalVariableCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.IndividualCode", "'IndividualCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.LanguageCode", "'LanguageCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.LocalizationCode", "'LocalizationCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.StatusCode", "'StatusCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SysDataTypeCode", "'SysDataTypeCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.TypeCategoryCode", "'TypeCategoryCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.TypeListCode", "'TypeListCode', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Woorj.Data.Adm.AccessRight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessRightTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR AccessRightCode");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Parent_AccessRightId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccessRightTypeId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AccessRight");
                });

            modelBuilder.Entity("Woorj.Data.Adm.AccessRightType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR AccessRightTypeCode");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("AccessRightType");
                });

            modelBuilder.Entity("Woorj.Data.Adm.Localization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR LocalizationCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("KeyWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("LanguageId");

                    b.HasIndex("Translation");

                    b.HasIndex("KeyWord", "LanguageId", "EntityName")
                        .IsUnique()
                        .HasFilter("[LanguageId] IS NOT NULL");

                    b.ToTable("Localization");
                });

            modelBuilder.Entity("Woorj.Data.Adm.RoleAccessRight", b =>
                {
                    b.Property<string>("ApplicationRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessRightId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationRoleId", "AccessRightId");

                    b.HasIndex("AccessRightId");

                    b.ToTable("RoleAccessRight");
                });

            modelBuilder.Entity("Woorj.Data.Core.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Woorj.Data.Core.GlobalVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GlobalVariableCode");

                    b.Property<string>("DefaultVal")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(900)")
                        .HasMaxLength(900);

                    b.Property<string>("KeyWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SysDataTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("KeyWord");

                    b.HasIndex("StatusId");

                    b.HasIndex("SysDataTypeId");

                    b.HasIndex("TypeListId");

                    b.ToTable("GlobalVariable");
                });

            modelBuilder.Entity("Woorj.Data.Core.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR StatusCode");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<int?>("TypeListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("TypeListId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Woorj.Data.Core.SysDataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SysDataTypeCode");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("RangeValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("SizeBits")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeListId");

                    b.ToTable("SysDataType");
                });

            modelBuilder.Entity("Woorj.Data.Core.TypeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR TypeCategoryCode");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("TypeCategory");
                });

            modelBuilder.Entity("Woorj.Data.Core.TypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR TypeListCode");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<int?>("TypeCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("TypeCategoryId");

                    b.ToTable("TypeList");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alpha2")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Alpha3")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR CountryCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Alpha2")
                        .IsUnique();

                    b.HasIndex("Alpha3")
                        .IsUnique();

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Iso")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.ToTable("Country","dbo");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR GenderCode");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alpha2")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Alpha3")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR LanguageCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NativeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Alpha2")
                        .IsUnique();

                    b.HasIndex("Alpha3")
                        .IsUnique();

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("StatusId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Tmp1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("F1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tmp1");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Tmp2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("F1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tmp2");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Tmp3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("F1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tmp3");
                });

            modelBuilder.Entity("Woorj.Data.IndOrg.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ContactCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("IndividualId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Woorj.Data.IndOrg.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOfJoining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Woorj.Data.IndOrg.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BirthPlace_CountryId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR IndividualCode");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassOrg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecondNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirthPlace_CountryId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("FirstName");

                    b.HasIndex("GenderId");

                    b.HasIndex("LastName");

                    b.HasIndex("PassCode");

                    b.HasIndex("SecondName");

                    b.ToTable("Individual");
                });

            modelBuilder.Entity("Woorj.Data.Adm.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ApplicationRoleCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("Name");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("Woorj.Data.Adm.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ApplicationUserCode");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("FirstName");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastName");

                    b.HasIndex("SecondName");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woorj.Data.Adm.AccessRight", b =>
                {
                    b.HasOne("Woorj.Data.Adm.AccessRightType", "AccessRightType")
                        .WithMany("AccessRight")
                        .HasForeignKey("AccessRightTypeId");
                });

            modelBuilder.Entity("Woorj.Data.Adm.Localization", b =>
                {
                    b.HasOne("Woorj.Data.Dir.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Woorj.Data.Adm.RoleAccessRight", b =>
                {
                    b.HasOne("Woorj.Data.Adm.AccessRight", "AccessRight")
                        .WithMany("RoleAccessRight")
                        .HasForeignKey("AccessRightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woorj.Data.Adm.ApplicationRole", "ApplicationRole")
                        .WithMany("RoleAccessRight")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woorj.Data.Core.GlobalVariable", b =>
                {
                    b.HasOne("Woorj.Data.Core.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Woorj.Data.Core.SysDataType", "SysDataType")
                        .WithMany()
                        .HasForeignKey("SysDataTypeId");

                    b.HasOne("Woorj.Data.Core.TypeList", "TypeList")
                        .WithMany()
                        .HasForeignKey("TypeListId");
                });

            modelBuilder.Entity("Woorj.Data.Core.Status", b =>
                {
                    b.HasOne("Woorj.Data.Core.TypeList", "TypeList")
                        .WithMany()
                        .HasForeignKey("TypeListId");
                });

            modelBuilder.Entity("Woorj.Data.Core.SysDataType", b =>
                {
                    b.HasOne("Woorj.Data.Core.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Woorj.Data.Core.TypeList", "TypeList")
                        .WithMany()
                        .HasForeignKey("TypeListId");
                });

            modelBuilder.Entity("Woorj.Data.Core.TypeList", b =>
                {
                    b.HasOne("Woorj.Data.Core.TypeCategory", "TypeCategory")
                        .WithMany()
                        .HasForeignKey("TypeCategoryId");
                });

            modelBuilder.Entity("Woorj.Data.Dir.Language", b =>
                {
                    b.HasOne("Woorj.Data.Core.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Woorj.Data.IndOrg.Contact", b =>
                {
                    b.HasOne("Woorj.Data.IndOrg.Individual", "Individual")
                        .WithMany("Contact")
                        .HasForeignKey("IndividualId");
                });

            modelBuilder.Entity("Woorj.Data.IndOrg.Individual", b =>
                {
                    b.HasOne("Woorj.Data.Dir.Country", "BirthPlace_Country")
                        .WithMany("Individual")
                        .HasForeignKey("BirthPlace_CountryId");

                    b.HasOne("Woorj.Data.Dir.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");
                });

            modelBuilder.Entity("Woorj.Data.Adm.ApplicationUser", b =>
                {
                    b.HasOne("Woorj.Data.Dir.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });
#pragma warning restore 612, 618
        }
    }
}

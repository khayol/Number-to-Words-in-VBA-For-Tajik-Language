@page "/IndOrg/ContactEdit/{CurrentID}"
@inject ContactController objContactController

<AuthorizeView Roles="@admSer.GetRolesList("ContactEdit")" Context="authContext">
  <Authorized>

<EditForm Model="@objContact" OnValidSubmit="@UpdateContact" OnInvalidSubmit="@Cancel" Context="formContext">  
    <FluentValidationValidator /> 
    <ValidationSummary/>
    
    <WrPnlElm>
        <ControlQuickAccess>
             
                @if( readonlyOther==false )
                {
                    CancelOrBeckTxt="Cancel";
                    <input type="submit" class="btn bnt-style-general"  value="@trs.GetTranslation("Update",@AppData.ActiveUser,"General")">
                    
                }else{
                  CancelOrBeckTxt="Back";
                }
                 &nbsp;
                    <input   type="button" class="btn btn bnt-style-general" @onclick="@Cancel" value="@trs.GetTranslation(@CancelOrBeckTxt,@AppData.ActiveUser,"General")">
                 &nbsp;

        </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>

            <WrFieldInt TransEntity="General" FieldCaption="Code" 
            ReadonlyOpt="readonlyMain1" Val="@objContact.Code" />

           <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="Name"
            TransEntity="General"  @bind-BindingValue ="@objContact.Name"/> 

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="Description"
            TransEntity="General"  @bind-BindingValue ="@objContact.Description"/>

   
        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</Authorized>
 <NotAuthorized>
       <WrPageNotFound/>
 </NotAuthorized>

  </AuthorizeView>

@code{
    [Parameter]
    public string CurrentID { get; set; }
    Contact objContact = new Contact();
    private string  CancelOrBeckTxt { get; set; }


    private bool readonlyMain1 {get;set;}=false;
    private bool readonlyMain2 {get;set;}=false;
    private bool readonlyOther {get;set;}=false;

    protected override void OnInitialized()
    {
        objContact = objContactController.GetContactById(Convert.ToInt32(CurrentID));
        readonlyMain1=AppData.readonlyMain1;
        readonlyMain2=AppData.readonlyMain2;
        readonlyOther=AppData.readonlyOther;
   }

    protected void UpdateContact()
    {
        objContactController.UpdateContact(objContact);
        NavManager.NavigateTo("/IndOrg/ContactViewStd/"+AppData.Individual_IdSelect);
    }
    void Cancel()
    {
        NavManager.NavigateTo("/IndOrg/ContactViewStd/"+AppData.Individual_IdSelect);
    }
}
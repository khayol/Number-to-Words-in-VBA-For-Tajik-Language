@page "/IndOrg/IndividualEdit/{CurrentID}"
@inject IndividualController MainController
@inject GenderController GenderController
@inject CountryController CountryController
@inject GnrSrv GnrSrv 

<AuthorizeView Roles="@admSer.GetRolesList("IndividualEdit")" Context="authContext">
  <Authorized>

<EditForm Model="@objMain" OnValidSubmit="@Update" Context="formContext">  
    <FluentValidationValidator />  @* <DataAnnotationsValidator />   It's Standard method of validations *@
    <ValidationSummary/>
    
    <WrPnlElm>
        <ControlQuickAccess>
            <WrOper Category="EditForm" EditOrView=true ReadonlyOther=@readonlyOther TypeInput="submit" Txt="Update"/>
            <WrOper Category="EditForm" EditOrView=true ReadonlyOther=@readonlyOther TypeInput="button" Txt="Cancel"  OnClickCallback="Cancel"/> 
       </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>
            <WrFieldInt TransEntity="Individual" FieldCaption="Code" 
            ReadonlyOpt="readonlyMain1" Val="@objMain.Code" />

           <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="FirstName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.FirstName"/> 

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="SecondName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.SecondName"/>

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="LastName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.LastName"/>

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="FirstNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.FirstNameEN"/>

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="SecondNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.SecondNameEN"/>

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="LastNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.LastNameEN"/>    
           
           <WrFieldDateTime TransEntity="Individual" FieldCaption="BirthDay">
               <RenderFrg>
                   <InputDate readonly="@readonlyOther"  form="BirthDay"  class="form-control"  @bind-Value="@objMain.BirthDay" @bind-Value:format="dd/MM/yyyy"/>
               </RenderFrg>
           </WrFieldDateTime>
            
            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="Address"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.Address"/>

            <WrFieldArray TransEntity="Individual" FieldCaption="Contact" >
                <RenderFrg>
                <label  class="control-clct">@GnrSrv.ExistDataORNotFlag("Contact", "IndividualId", @CurrentID)</label>
                <input disabled="@readonlyOther" type="button" class="btn btn bnt-style-general" @onclick="@(args => GoToCollection("/IndOrg/ContactViewStd/",CurrentID))"
                  value="@trs.GetTranslation("Edit",@AppData.ActiveUser,"General")">
                </RenderFrg>
            </WrFieldArray>

            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="PassSerial"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.PassSerial"/>
    
            <WrFieldStr ReadonlyThis="readonlyOther" FieldCaption="PassCode"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.PassCode"/>
 
            <div class="form-group">
                     <WrLebel TransEntity="Individual" FieldCaption="Gender"/>
                          <select disabled="@readonlyOther" class="form-control selectpicker" @bind="@objMain.GenderId">
                            <option>--select--</option>
                            @foreach (var item in GenderList)
                            {
                            <option value="@item.Id">@item.Name</option> // Blazor needs to know what values it binds to!
                            }
                        </select>   
            </div> 
                 
               <div class="form-group">
                    <WrLebel TransEntity="Individual" FieldCaption="BirthPlace" />
                    <input disabled="@readonlyOther" type="button" class="btn btn bnt-style-general" @onclick="@(args => GoToCollection("/Dir/CountryViewStd/",@objMain.BirthPlace_CountryId.ToString(),"Individual",@objMain.Id,"BirthPlace_CountryId"))"
                       value="@trs.GetTranslation("Edit",@AppData.ActiveUser,"General")">
                    <input readonly="true" form="BirthPlace" class="form-control" value="@GnrSrv.GetReleatedData("Country", "Name", @objMain.BirthPlace_CountryId.ToString())" />
                </div>
     
                <div class="form-group">
                    <WrLebel TransEntity="Individual" FieldCaption="CreatedDate"/>
                    <input  readonly="@readonlyMain1" class="form-control" @bind="@objMain.CreatedDate" />
                </div>

        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</Authorized>
 <NotAuthorized>
       <WrPageNotFound/>
 </NotAuthorized>

  </AuthorizeView>


@code{

    [Parameter]
    public string CurrentID { get; set; }
    Individual objMain = new Individual();
    
    private string  CancelOrBeckTxt { get; set; }
    private List<Country> CountryList;
    
    private List<Gender> GenderList;
    //private WrCombo<Gender> grid;    

    private bool readonlyMain1 {get;set;}=false;
    private bool readonlyMain2 {get;set;}=false;
    private bool readonlyOther {get;set;}=false;  

    protected override void OnInitialized()
    {
        objMain = MainController.GetById_FirstOrDefault(Convert.ToInt32(CurrentID));
        GenderList =  GenderController.Get();
        CountryList =  CountryController.Get();

        readonlyMain1=AppData.readonlyMain1;
        readonlyMain2=AppData.readonlyMain2;
        readonlyOther=AppData.readonlyOther;

    }
    public void GoToCollection(string pLinkAddress,string pIdOfRecord)
    {           
      AppData.BaseUrlUri=NavManager.Uri;//"/IndOrg/IndividualEdit/"+pIdOfRecord;
      NavManager.NavigateTo(pLinkAddress+pIdOfRecord); // change "0" to the Contact Id in Individual Table
      AppData.flg_ChoosedRow=1;
      AppData.ChoosedRowId=int.Parse(pIdOfRecord);      
    }

    public void GoToCollection(string pLinkAddress,string pIdOfRecord,  string pChoosedEntityName, 
                               int pChoosedEntityId, string pChoosedEntityFK)
    {           
        AppData.BaseUrlUri=NavManager.Uri;
        NavManager.NavigateTo(pLinkAddress+"0");
        AppData.flg_ChoosedRow=1;

        if (!string.IsNullOrEmpty(pIdOfRecord)){
        AppData.ChoosedRowId=int.Parse(pIdOfRecord);
        } else
        {
          AppData.ChoosedRowId=1; // NeedUpdate (bad solution)
        }
        AppData.ChoosedEntityName=pChoosedEntityName; 
        AppData.ChoosedEntityId=pChoosedEntityId; 
        AppData.ChoosedEntityFK=pChoosedEntityFK;
      
    }

    protected void Update()
    {
        MainController.Update(objMain);
        NavManager.NavigateTo(AppData.IndividualLink);
    }
    void Cancel()
    {
        NavManager.NavigateTo(AppData.IndividualLink);
    }

     void Nothing()
    {
        
    }

  
}
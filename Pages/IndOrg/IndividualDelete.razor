@page "/IndOrg/IndividualDelete/{CurrentID}"
@inject IndividualController MainController

<AuthorizeView Roles="@admSer.GetRolesList("IndividualDelete")" Context="authContext">
  <Authorized>

<EditForm Model="@objMain" OnValidSubmit="@Delete" OnInvalidSubmit="@Cancel" Context="formContext">  
   
    <WrPnlElm>
        <ControlQuickAccess>
             <WrOper Category="EditForm" TypeInput="submit" Txt="Delete"/>
             <WrOper Category="EditForm" TypeInput="button" Txt="Cancel"  OnClickCallback="Cancel"/>
        </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>
            <WrQuestOrMsg Txt="AreYouSureToDeteteRow"/>
           
            <WrFieldInt TransEntity="Individual" FieldCaption="Code" 
            ReadonlyOpt="readonlyMain1" Val="@objMain.Code" />

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="FirstName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.FirstName"/> 

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="SecondName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.SecondName"/>

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="LastName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.LastName"/>

        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</Authorized>
<NotAuthorized>
    <WrPageNotFound/>
</NotAuthorized>
</AuthorizeView>


@code{

    [Parameter]
    public string CurrentID { get; set; }
    Individual objMain = new Individual();  
    private bool readonlyMain1 {get;set;}=false;

    protected override void OnInitialized()
    {
          readonlyMain1=AppData.readonlyMain1;
        objMain = MainController.GetById_FirstOrDefault(Convert.ToInt32(CurrentID));
    }

    protected void Delete()
    {
        MainController.Delete(objMain);
        NavManager.NavigateTo(AppData.IndividualLink);
    }
    void Cancel()
    {
        NavManager.NavigateTo(AppData.IndividualLink);
    }

}
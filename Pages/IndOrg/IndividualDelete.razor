@page "/IndOrg/IndividualDelete/{CurrentID}"
@inject IndividualController IndividualController
@inject GenderController GenderController
@inject CountryController CountryController

<AuthorizeView Roles="@admSer.GetRolesList("IndividualDelete")" Context="authContext">
  <Authorized>

<EditForm Model="@objIndividual" OnValidSubmit="@UpdateIndividual" OnInvalidSubmit="@OnInvalidSubmitMsg" Context="formContext">  
   
    <WrPnlElm>
        <ControlQuickAccess>
                <input type="submit" class="btn bnt-style-general"  value="@trs.GetTranslation("Delete",@AppData.ActiveUser,"General")">
                <input   type="button" class="btn btn bnt-style-general" @onclick="@Cancel" value="@trs.GetTranslation("Cancel",@AppData.ActiveUser,"General")">
        </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>
            <h4>@trs.GetTranslation("AreYouSureToDeteteRow",@AppData.ActiveUser,"General")</h4>
           
            <WrFieldInt TransEntity="Individual" FieldCaption="Code" 
            ReadonlyOpt="readonlyMain1" Val="@objIndividual.Code" />

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="FirstName"
            TransEntity="Individual"  @bind-BindingValue ="@objIndividual.FirstName"/> 

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="SecondName"
            TransEntity="Individual"  @bind-BindingValue ="@objIndividual.SecondName"/>

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="LastName"
            TransEntity="Individual"  @bind-BindingValue ="@objIndividual.LastName"/>

        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</Authorized>
<NotAuthorized>
    <WrPageNotFound/>
</NotAuthorized>
</AuthorizeView>


@code{

    [Parameter]
    public string CurrentID { get; set; }
    Individual objIndividual = new Individual();  
    private bool readonlyMain1 {get;set;}=false;

    private void RefrashPage()
     {
             StateHasChanged();
     }
    protected override void OnInitialized()
    {
          readonlyMain1=AppData.readonlyMain1;
        objIndividual = IndividualController.GetById_FirstOrDefault(Convert.ToInt32(CurrentID));
    }

    protected void UpdateIndividual()
    {
        IndividualController.Delete(objIndividual);
        NavManager.NavigateTo(AppData.IndividualLink);
    }
    void Cancel()
    {
        NavManager.NavigateTo(AppData.IndividualLink);
    }

     void OnInvalidSubmitMsg()
    {
       // Console.WriteLine("OnInvalidSubmit");
    }
}
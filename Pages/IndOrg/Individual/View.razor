@page "/IndOrg/Individual/View/{CurrentID}"
@inject IndividualController MainController
@inject GenderController GenderController
@inject CountryController CountryController
@inject GnrSrv GnrSrv 

<WrAuth PageName="IndividualEdit"><MainContent>  

<EditForm Model="@objMain" OnValidSubmit="@Cancel" Context="formContext">  
    <FluentValidationValidator />  @* <DataAnnotationsValidator />   It's Standard method of validations *@
    <ValidationSummary/>
    
    <WrPnlElm>
        <ControlQuickAccess>
            <WrOper Category="EditForm" EditOrView=true  TypeInput="button" Txt="back"  OnClickCallback="Cancel"/> 
       </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>
            <WrFieldInt TransEntity="Individual" FieldCaption="Code" 
            Readonly="true" Val="@objMain.Code" />

           <WrFieldStr Readonly="true" FieldCaption="FirstName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.FirstName"/> 

            <WrFieldStr Readonly="true" FieldCaption="SecondName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.SecondName"/>

            <WrFieldStr Readonly="true" FieldCaption="LastName"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.LastName"/>

            <WrFieldStr Readonly="true" FieldCaption="FirstNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.FirstNameEN"/>

            <WrFieldStr Readonly="true" FieldCaption="SecondNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.SecondNameEN"/>

            <WrFieldStr Readonly="true" FieldCaption="LastNameEN"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.LastNameEN"/>    
           
           <WrFieldDateTime TransEntity="Individual" FieldCaption="BirthDay">
               <RenderFrg>
                   <InputDate readonly="@true"  form="BirthDay"  class="form-control"  @bind-Value="@objMain.BirthDay" @bind-Value:format="dd/MM/yyyy"/>
               </RenderFrg>
           </WrFieldDateTime>
            
            <WrFieldStr Readonly="true" FieldCaption="Address"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.Address"/>

            <WrFieldArray TransEntity="Individual" FieldCaption="Contact" >
                <RenderFrg>
                <label  class="control-clct">@GnrSrv.ExistDataORNotFlag("Contact", "IndividualId", @CurrentID)</label>
                </RenderFrg>
            </WrFieldArray>

            <WrFieldStr Readonly="true" FieldCaption="PassSerial"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.PassSerial"/>
    
            <WrFieldStr Readonly="true" FieldCaption="PassCode"
            TransEntity="Individual"  @bind-BindingValue ="@objMain.PassCode"/>
 
            <div class="form-group">
                     <WrLebel TransEntity="Individual" FieldCaption="Gender"/>
                          <select disabled="@true" class="form-control selectpicker" @bind="@objMain.GenderId">
                            <option>--select--</option>
                            @foreach (var item in GenderList)
                            {
                            <option value="@item.Id">@item.Name</option> // Blazor needs to know what values it binds to!
                            }
                        </select>   
            </div> 
                 
               <div class="form-group">
                    <WrLebel TransEntity="Individual" FieldCaption="BirthPlace" />
                    <input readonly="true" form="BirthPlace" class="form-control" value="@GnrSrv.GetReleatedData("Country", "Name", @objMain.BirthPlace_CountryId.ToString())" />
                </div>
     
                <div class="form-group">
                    <WrLebel TransEntity="Individual" FieldCaption="CreatedDate"/>
                    <input  readonly="true" class="form-control" @bind="@objMain.CreatedDate" />
                </div>

        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</MainContent></WrAuth>


@code{ 
    [Parameter] public string CurrentID { get; set; }
    Individual objMain = new Individual();    
    private List<Country> CountryList;    
    private List<Gender> GenderList;

    protected override void OnInitialized()
    {
        objMain = MainController.GetById_FirstOrDefault(Convert.ToInt32(CurrentID));
        GenderList =  GenderController.Get();
        CountryList =  CountryController.Get();
    }
    void Cancel()
    {
         NavManager.NavigateTo("/IndOrg/Individual/ViewStd/"+CurrentID);
    }

  
}
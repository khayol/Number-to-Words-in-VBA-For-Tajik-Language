@page  "/{thisDir}/{thisSubDir}/{thisPage}/{Id}"
@inject IndividualController MainController

<WrAuth PageName="@pageNameForTransl"><MainContent>   
        
    <WrDataGrid @ref="grid"
                  DataItems="list"
                  SelectedRow="SelectedRowMeth"
                  Columns="@MainController.columns"
                  UniqIdOfRecord=@uniqIdOfRecord
                  ColumnsToExcludeCSV=@columnsToExcludeCSV
                  PageNameTitle=@pageNameTitle
                  BackLink=@backLink
                  Paging="@(new PagingConfig
                            {
                                Enabled = true,
                                CustomPager = false,
                                PageSize = @AppData.rowNumMid
                            })">

        <ControlMenu>
            <WrOper Design="a" Type="C"  Link=@operLink SubPage="Add"     Txt="Add" />
            <WrOper Design="a" Type="R"  Link=@operLink SubPage="View/"   LinkId=@selectedId Txt="View" />
            <WrOper Design="a" Type="U"  Link=@operLink SubPage="Edit/"   LinkId=@selectedId Txt="Edit" />
            <WrOper Design="a" Type="D"  Link=@operLink SubPage="Delete/" LinkId=@selectedId Txt="Delete" />
        </ControlMenu>

        <ControlQuickAccess>
            <WrSrchDGrid OnSearchTextChanged="SearchTxt"> </WrSrchDGrid>
            <WrSpace Length=2/>
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-angle-double-down" OnClickCallback="@CleanSearchBox"  TxtToolTip="ShowMoreRecords" />
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-hand-pointer-o" OnClickCallback="@FindSelectedRec" TxtToolTip="Choose"/>
            <WrSpace Length=2/>
            <WrOper Design="btn" Type="C" Ico="fa fa-plus"   Link=@operLink SubPage="Add"    TxtToolTip="Add" />
            <WrOper Design="btn" Type="R" Ico="fa fa-file"   Link=@operLink SubPage="View/"   LinkId=@selectedId TxtToolTip="View" />
            <WrOper Design="btn" Type="U" Ico="fa fa-pencil" Link=@operLink SubPage="Edit/"   LinkId=@selectedId TxtToolTip="Edit" />
            <WrOper Design="btn" Type="D" Ico="fa fa-trash"  Link=@operLink SubPage="Delete/" LinkId=@selectedId TxtToolTip="Delete" />
            <WrSpace Length=2/>
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-filter" OnClickCallback="@FilterData"  TxtToolTip="Filter" />
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-file-excel-o" OnClickCallback="@ExportToExcel" TxtToolTip="ExportToExcel"/>
        </ControlQuickAccess>
    </WrDataGrid>
   </MainContent></WrAuth>


@code  {

 #region     Declare

    private WrDataGrid<Individual> grid;
    private List<Individual> list;
    
    [Parameter] public string Id { get; set; } 
    [Parameter] public string thisDir { get; set; }="IndOrg";  
    [Parameter] public string thisSubDir { get; set; }="Individual";
    [Parameter] public string thisPage { get; set; }="ViewStd"; 
    [Parameter] public string uniqIdOfRecord { get; set; }="Id";  
    [Parameter] public string columnsToExcludeCSV { get; set; }="Id, FirstName"; 
    [Parameter] public string backLink  { get; set; }="/MainMenu";  
    [Parameter] public string selectedId { get; set;}="0";

    private string operLink { get{ return "/" +thisDir+ "/" + thisSubDir+ "/ ";}}
    private string pageNameForTransl{ get{ return  thisSubDir+  thisPage;}}
    private string pageNameTitle { get{ return  pageNameForTransl+"::"+thisSubDir;}}
 
 #endregion  Declare

 #region    BlazorMethods


    protected override void OnInitialized()
    {
        MainController.Initialized();
        list = MainController.GetById(int.Parse(Id)).ToList();       
    }

#endregion BlazorMethods

#region    Event
    protected void CleanSearchBox()
    {
        grid.GoToFirstPage();
        list = MainController.GetSearchByField("");
        AppData.Individual_IdSelect = "0";
        selectedId="0";
    }
    private void SelectedRowMeth(string pSelectedRow)
    {
        selectedId= pSelectedRow;
        AppData.Individual_IdSelect = pSelectedRow;
    }

    private void SearchTxt(ChangeEventArgs changeEventArgs)
    {
        string searchValue = changeEventArgs.Value.ToString();
        list = MainController.GetSearchByField(searchValue);
        grid.GoToFirstPage();
    }

    protected void FindSelectedRec()
    {
        grid.GoToFirstPage();
        list = MainController.GetById(int.Parse(selectedId));
    }

    protected void ExportToExcel()
    {
        MainController.GenerateExcel(JSRuntime);
    }
    protected void FilterData()
    {
        JSRuntime.InvokeVoidAsync("msgbox", "FilterData");
    }
 #endregion Event

}

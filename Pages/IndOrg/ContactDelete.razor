@page "/IndOrg/ContactDelete/{CurrentID}"
@inject ContactController objContactController

<AuthorizeView Roles="@admSer.GetRolesList("ContactDelete")" Context="authContext" > 
  <Authorized>

<EditForm Model="@objContact" OnValidSubmit="@DeleteContact" OnInvalidSubmit="@Cancel" Context="formContext" >  
   
    <WrPnlElm>
        <ControlQuickAccess>
                <input type="submit" class="btn bnt-style-general"  value="@trs.GetTranslation("Delete",@AppData.ActiveUser,"General")">
                <input   type="button" class="btn btn bnt-style-general" @onclick="@Cancel" value="@trs.GetTranslation("Cancel",@AppData.ActiveUser,"General")">
        </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>
            <h4>@trs.GetTranslation("AreYouSureToDeteteRow",@AppData.ActiveUser,"General")</h4>
  
             <WrFieldInt TransEntity="Individual" FieldCaption="Code" 
            ReadonlyOpt="readonlyMain1" Val="@objContact.Code" />

            <WrFieldStr ReadonlyThis="readonlyMain1" FieldCaption="Name"
            TransEntity="Individual"  @bind-BindingValue ="@objContact.Name"/> 

      </FormElements>      
    </WrFormBody>    
    </EditForm>    
</Authorized>
<NotAuthorized>
    <WrPageNotFound/>
</NotAuthorized>
</AuthorizeView>

@code{
   [Parameter]
   public string CurrentID {get;set;}
    Contact objContact= new Contact();
       private bool readonlyMain1 {get;set;}=false;

       protected override void OnInitialized()
    {
      readonlyMain1=AppData.readonlyMain1;
      objContact = objContactController.GetContactById(Convert.ToInt32(CurrentID));       
    }
    
    protected void DeleteContact(){

        objContactController.DeleteContact(objContact);
        NavManager.NavigateTo("/IndOrg/ContactViewStd/"+AppData.Individual_IdSelect);
    }
    void Cancel(){
        NavManager.NavigateTo("/IndOrg/ContactViewStd/"+AppData.Individual_IdSelect);
    }
}
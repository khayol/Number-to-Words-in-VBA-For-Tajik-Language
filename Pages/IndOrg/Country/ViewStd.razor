@page "/IndOrg/Country/ViewStd/{Id}"
@inject CountryController MainController

<WrAuth PageName="CountryViewStd"><MainContent> 
    <WrDataGrid @ref="grid"
                  DataItems="list"
                  SelectedRow="SelectedRowMeth"
                  Columns="@MainController.columns"
                  UniqIdOfRecord="Id"
                  ColumnsToExcludeCSV="Id"
                  PageNameTitle="CountryViewStd::Dir"
                  BackLink="WndBack"
                  Paging="@(new PagingConfig
                            {
                                Enabled = true,
                                CustomPager = false,
                                PageSize = @AppData.rowNumMid
                            })">
         
        <ControlQuickAccess>
            <WrSrchDGrid OnSearchTextChanged="SearchTxt"> </WrSrchDGrid>
            <WrSpace Length=2/>
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-angle-double-down" OnClickCallback="@CleanSearchBox"  TxtToolTip="ShowMoreRecords" />
            <WrOper Category="RunCmd" Design="btn" Ico="fa fa-hand-pointer-o" OnClickCallback="@FindSelectedRec" TxtToolTip="Choose"/>
              <WrSpace Length=2/>
        </ControlQuickAccess>
    </WrDataGrid>
 </MainContent></WrAuth>


@code  {


 #region     Declare
    [Parameter] public string Id { get; set; }
    private WrDataGrid<Country> grid;
    private List<Country> list;
    private string searchValue   { get; set; }  
        [Parameter] public string selectedId { get; set;}="0";
 
 #endregion  Declare

 #region    BlazorMethods

    protected override void OnInitialized()
    {
        MainController.Initialized();
        list = MainController.GetById(int.Parse(Id)).ToList();         
    }

#endregion BlazorMethods

#region    Event


    private void SearchTxt(ChangeEventArgs changeEventArgs)
    {
        searchValue = changeEventArgs.Value.ToString();
        list = MainController.GetSearchByField(searchValue);
        grid.GoToFirstPage();
    }
    private void SelectedRowMeth(string pSelectedRow)
    {
        selectedId = pSelectedRow;
    }
    protected void FindSelectedRec()
    {
        grid.GoToFirstPage();
        list = MainController.GetById(int.Parse(selectedId));
    }
    protected void CleanSearchBox()
    {
        grid.GoToFirstPage();
        list = MainController.GetSearchByField("");
        selectedId = "0";
        searchValue="";
    }

    protected void ExportToExcel()
    {
       // MainController.GenerateExcel(JSRuntime);
    }
    protected void FilterData()
    {
        JSRuntime.InvokeVoidAsync("msgbox", "FilterData");
    }
 #endregion Event

}

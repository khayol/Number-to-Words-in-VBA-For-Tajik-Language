@page "/IndOrg/IndividualAdd"
@inject IndividualController IndividualController
@inject GenderController GenderController
@inject GnrSrv GnrSrv 

@if (GenderList == null)
{
    <p><em>Loading...</em></p>
@* <div class="spinner"></div> *@
}
else
{

<EditForm Model="@objIndividual" OnValidSubmit="@CreateIndividual">  
    <DataAnnotationsValidator />  
    <ValidationSummary/>
    
    <div class="fix-possition">
    <WrPnlElm>
    <ControlQuickAccess>
    <input type="submit" class="btn bnt-style-general"  value="Save" >
    <input type="button" class="btn bnt-style-general" @onclick="@Cancel" value="Cancel">
    @* <button class="btn bnt-style-general" @onclick="@(args => NavManager.NavigateTo(AppData.IndividualLink))" data-toggle="tooltip" title="Beck"><span class="fa fa-backward" aria-hidden="true"></span> Beck</button> *@
    </ControlQuickAccess>
    </WrPnlElm>
    </div> 
    


<div class="under-cls">
<div class="row">    
    <div class="col-md-8  field-content">

    <div class="form-group">
        <label for="LastName" class="control-lable">FirstName</label> 
        @* <InputText class="form-control" id="FirstName" @bind-Value="objIndividual.FirstName" />  *@
        <input class="form-control" id="FirstName" @bind="objIndividual.FirstName" /> 
        @* <div class="col-md-5"><ValidationMessage For="@(() => objIndividual.FirstName)" /> </div>   *@
    </div>  
     <div class="form-group">
        <label for="LastName" class="control-lable">SecondName</label>
        @* <InputText  class="form-control" id="SecondName" @bind-Value="objIndividual.SecondName" /> *@
        <input  class="form-control" id="SecondName" @bind="objIndividual.SecondName" />
        @* <div class="col-md-5"><ValidationMessage For="@(() => objIndividual.SecondName)" /> </div>   *@
    </div>  

        <div class="form-group">
            <label for="LastName" class="control-lable">LastName</label>
            <input form="LastName" class="form-control" @bind="@objIndividual.LastName" />
        </div>
     
        <div class="form-group">
            <label for="FirstNameEN" class="control-lable">FirstNameEN</label>
            <input form="FirstNameEN" class="form-control" @bind="@objIndividual.FirstNameEN" />
        </div>

        <div class="form-group">
            <label for="LastNameEN" class="control-lable">LastNameEN</label>
            <input form="LastNameEN" class="form-control" @bind="@objIndividual.LastNameEN" />
        </div>

        <div class="form-group">
            <label for="BirthDay" class="control-lable">BirthDay</label>
            <input form="BirthDay" class="form-control" @bind="@objIndividual.BirthDay" />
        </div>

        <div class="form-group">
            <label for="Address" class="control-lable">Address</label>
            <input form="Address" class="form-control" @bind="@objIndividual.Address" />
        </div>
         
        <div class="form-group">
            <label for="PassSerial" class="control-lable">PassSerial</label>
            <input form="PassSerial" class="form-control" @bind="@objIndividual.PassSerial" />
        </div>

        <div class="form-group">
            <label for="PassCode" class="control-lable">PassCode</label>
            <input form="PassCode" class="form-control" @bind="@objIndividual.PassCode" />
        </div>

        <select class="form-control selectpicker" @bind="@objIndividual.GenderId">
            <option>--select--</option>
            @foreach (var item in GenderList)
            {
            <option value="@item.Id">@item.Name</option> // Blazor needs to know what values it binds to!
            }
            </select>


        <div class="form-group">
            <label for="CreatedDate" class="control-lable">CreatedDate</label>
            <input form="CreatedDate" class="form-control" @bind="@objIndividual.CreatedDate" />
        </div>
       
    </div>
    
</div>


</div>
   
  
</EditForm> 
}
@code{

    [Parameter]
    public string CurrentID { get; set; }

    Individual objIndividual= new Individual();

     private List<Gender> GenderList;
  
       protected override void OnInitialized()
    {
        GenderList =  GenderController.GetGender();
    }

     protected  void CreateIndividual()
     { 
        IndividualController.Create(objIndividual);
        NavManager.NavigateTo("/IndOrg/IndividualViewStd/"+AppData.Individual_IdSelect);
     }

    void Cancel(){
        NavManager.NavigateTo("/IndOrg/IndividualViewStd/"+AppData.Individual_IdSelect);
    }

}
@page "/IndOrg/ContactViewStd/{IndividualId}"
@inject ContactController MainController

@if (ContactList == null)
{
   <WrLoading/>
}
else
{
   <AuthorizeView Roles="@admSer.GetRolesList("ContactViewStd")" Context="authContext">
   <Authorized>
    <WrDataGrid @ref="grid"
                  DataItems="ContactList"
                  Columns="@MainController.columns"
                  SelectedRow="SelectedRowMeth"
                  UniqIdOfRecord="Id"
                  ColumnsToExcludeCSV="Id,IndividualId"
                  PageNameTitle="@trs.GetTranslation("ContactViewStd",@AppData.ActiveUser,"Individual")">

           <ControlQuickAccess>
   
              &nbsp &nbsp
            <input   type="button" class="btn btn bnt-style-general" @onclick="@(args => NavManager.NavigateTo(AppData.BaseUrlUri))" value="@trs.GetTranslation("Back",@AppData.ActiveUser,"General")">
          
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("C","/IndOrg/ContactAdd",""))" data-toggle="tooltip" title="@trs.GetTranslation("Add",@AppData.ActiveUser,"General")"><span class="fa fa-plus" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("R","/IndOrg/ContactEdit/", @AppData.Individual_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("View",@AppData.ActiveUser,"General")"><span class="fa fa-file" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("U","/IndOrg/ContactEdit/", @AppData.Individual_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("Edit",@AppData.ActiveUser,"General")"><span class="fa fa-pencil" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("D","/IndOrg/ContactDelete/", @AppData.Individual_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("Delete",@AppData.ActiveUser,"General")"><span class="fa fa-trash" aria-hidden="true"></span></button>
        
            </ControlQuickAccess> 
    
    </WrDataGrid>
    </Authorized>
 <NotAuthorized>
   <WrPageNotFound/>
 </NotAuthorized>
 </AuthorizeView>
}

    @code  {  

 #region     Declare
 
    private WrDataGrid<Contact> grid;
    private List<Contact> ContactList;
    
    [Parameter]
    public string IndividualId { get; set; }
 
 #endregion  Declare

 #region    BlazorMethods

    protected override void OnInitialized()
    {
        MainController.Initialized();
        AppData.ActivePageName="View-Contact"; 
        ContactList = MainController.GetContactByIndividualId(int.Parse(IndividualId)).ToList();
    }

#endregion BlazorMethods

#region    Event
    private void SelectedRowMeth(string pSelectedRow)
    {
     AppData.Individual_IdSelect = pSelectedRow;
    }
    private void CRUD(string pOperType, string pNavLink, string pRecId)
    {         
        ServClass servClass = new ServClass(NavManager,AppData,JSRuntime);
                  servClass.CRUD(pOperType,pNavLink, pRecId);
        AppData.Individual_IdSelect=IndividualId;          
    }

 #endregion Event

 
    }

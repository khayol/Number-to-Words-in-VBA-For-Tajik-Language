@page "/Dir/Contact/Edit/{CurrentId}"
@inject ContactController _objMainController

<WrAuth PageName="ContactEdit"><MainContent>  

<EditForm Model="@_objMain" OnValidSubmit="@Save" OnInvalidSubmit="@Cancel" Context="formContext">  
    <FluentValidationValidator /> 
    <ValidationSummary/>
    
    <WrPnlElm>
        <ControlQuickAccess>
            <WrOper Category="EditForm" EditOrView=true ReadonlyOther="false" TypeInput="button" Txt="Cancel"  OnClickCallback="Cancel"/> 
            <WrOper Category="EditForm" EditOrView=true ReadonlyOther="false" TypeInput="submit" Txt="Save"/>
       </ControlQuickAccess>
    </WrPnlElm>

    <WrFormBody>
        <FormElements>

            <WrFieldInt TransEntity="General" FieldCaption="Code" 
            Readonly="false" Val="@_objMain.Code" />

           <WrFieldStr Readonly="false" FieldCaption="Name"
            TransEntity="General"  @bind-BindingValue ="@_objMain.Name"/> 

            <WrFieldStr Readonly="false" FieldCaption="Description"
            TransEntity="General"  @bind-BindingValue ="@_objMain.Description"/>

   
        </FormElements>      
    </WrFormBody>    
    </EditForm>    
</MainContent></WrAuth>

@code{
    [Parameter] public string CurrentId { get; set; }
    Contact _objMain = new Contact();

    protected override void OnInitialized()
    {
        _objMain = _objMainController.GetContactById(Convert.ToInt32(CurrentId));
   }

    private void Save()
    {
        _objMainController.UpdateContact(_objMain);
        NavManager.NavigateTo("/Dir/Contact/ViewStd/"+CurrentId);
    }
    void Cancel()
    {
        NavManager.NavigateTo("/Dir/Contact/ViewStd/"+CurrentId);
    }
}
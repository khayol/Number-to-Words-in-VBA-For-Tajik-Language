@page "/Adm/ApplicationUserViewStd/{Id}"
@inject ApplicationUserController MainController

@if (list == null)
{
   <WrLoading/>   
}
else
{
<AuthorizeView Roles="@admSer.GetRolesList("ApplicationUserViewStd")" Context="authContext">
   <Authorized>
    <WrDataGrid @ref="grid"
                  DataItems="list"
                  SelectedRow="SelectedRowMeth"
                  Columns="@MainController.columns"
                  BaseUrlUri="@AppData.BaseUrlUri"
                  UniqIdOfRecord="Id"
                  ColumnsToExcludeCSV="Id"
                  PageNameTitle="@trs.GetTranslation("ApplicationUserViewStd",@AppData.ActiveUser,"Dir")"
                  Paging="@(new PagingConfig
                            {
                                Enabled = true,
                                CustomPager = false,
                                PageSize = @AppData.rowNumMid
                            })">

        <ControlMenu>
            <a @onclick="@(args => CRUD("C","/Adm/ApplicationUserAdd",""))" value="Add" class="menu-itms">@trs.GetTranslation("Add",@AppData.ActiveUser,"General")</a>
            <a @onclick="@(args => CRUD("R","/Adm/ApplicationUserEdit/", @AppData.ApplicationUser_IdSelect))" class="menu-itms">@trs.GetTranslation("View",@AppData.ActiveUser,"General")</a>
            <a @onclick="@(args => CRUD("U","/Adm/ApplicationUserEdit/", @AppData.ApplicationUser_IdSelect))" class="menu-itms">@trs.GetTranslation("Edit",@AppData.ActiveUser,"General")</a>
            <a @onclick="@(args => CRUD("D","/Adm/ApplicationUserDelete/", @AppData.ApplicationUser_IdSelect))" class="menu-itms">@trs.GetTranslation("Delete",@AppData.ActiveUser,"General")</a>
        </ControlMenu>

        <ControlQuickAccess>                  
          
            <WrSrchDGrid OnSearchTextChanged="SearchTxt"> </WrSrchDGrid>
            &nbsp &nbsp
            <button class="btn bnt-style-general" @onclick="@(args => CleanSearchBox())" data-toggle="tooltip" title="@trs.GetTranslation("ShowMoreRecords",@AppData.ActiveUser,"General")"><span class="fa fa-angle-double-down" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => FindSelectedRec())" data-toggle="tooltip" title="@trs.GetTranslation("Choose",@AppData.ActiveUser,"General")"><span class="fa fa-hand-pointer-o" aria-hidden="true" id="search-input"></span></button>
             &nbsp &nbsp
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("C","/Adm/ApplicationUserAdd",""))" data-toggle="tooltip" title="@trs.GetTranslation("Add",@AppData.ActiveUser,"General")"><span class="fa fa-plus" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("R","/Adm/ApplicationUserEdit/", @AppData.ApplicationUser_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("View",@AppData.ActiveUser,"General")"><span class="fa fa-file" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("U","/Adm/ApplicationUserEdit/", @AppData.ApplicationUser_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("Edit",@AppData.ActiveUser,"General")"><span class="fa fa-pencil" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => CRUD("D","/Adm/ApplicationUserDelete/", @AppData.ApplicationUser_IdSelect))" data-toggle="tooltip" title="@trs.GetTranslation("Delete",@AppData.ActiveUser,"General")"><span class="fa fa-trash" aria-hidden="true"></span></button>
            &nbsp &nbsp
            <button class="btn bnt-style-general" @onclick="@(args => FilterData())" data-toggle="tooltip" title="@trs.GetTranslation("Filter",@AppData.ActiveUser,"General")"><span class="fa fa-filter" aria-hidden="true"></span></button>
            <button class="btn bnt-style-general" @onclick="@(args => ExportToExcel())" data-toggle="tooltip" title="@trs.GetTranslation("ExportToExcel",@AppData.ActiveUser,"General")"><span class="fa fa-file-excel-o" aria-hidden="true"></span></button>
        </ControlQuickAccess>
    </WrDataGrid>
</Authorized>
 <NotAuthorized>
   <WrPageNotFound/>
 </NotAuthorized>
 </AuthorizeView>
}

@code  {


 #region     Declare
    [Parameter]
    public string Id { get; set; }
    private WrDataGrid<ApplicationUser> grid;
    private List<ApplicationUser> list;
    private string searchValue   { get; set; }
 
 #endregion  Declare

 #region    BlazorMethods

    protected override void OnInitialized()
    {
        MainController.Initialized();
        list = MainController.GetById(Id).ToList();         
    }

#endregion BlazorMethods

#region    Event

    private void SearchTxt(ChangeEventArgs changeEventArgs)
    {
        searchValue = changeEventArgs.Value.ToString();
        list = MainController.GetSearchByField(searchValue);
        grid.GoToFirstPage();
    }
    private void SelectedRowMeth(string pSelectedRow)
    {
        AppData.ApplicationUser_IdSelect = pSelectedRow;
    }
    protected void FindSelectedRec()
    {
        grid.GoToFirstPage();
        list = MainController.GetById(AppData.ApplicationUser_IdSelect);
    }
    protected void CleanSearchBox()
    {
        grid.GoToFirstPage();
        list = MainController.GetSearchByField("");
        AppData.ApplicationUser_IdSelect = "0";
    }
     private void CRUD(string pOperType, string pNavLink, string pRecId)
    {         
        ServClass servClass = new ServClass(NavManager,AppData,JSRuntime);
                  servClass.CRUD(pOperType,pNavLink, pRecId);
    }
    protected void ExportToExcel()
    {
       // MainController.GenerateExcel(JSRuntime);
    }
    protected void FilterData()
    {
        JSRuntime.InvokeVoidAsync("msgbox", "FilterData");
    }
 #endregion Event

}

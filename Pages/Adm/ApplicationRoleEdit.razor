@page "/Adm/ApplicationRoleEdit/{CurrentID}"
@inject ApplicationRoleController objApplicationRoleController

@inject IStringLocalizer<ApplicationRoleEdit> L 

@* @attribute [Authorize(Roles = "Admin")] *@

@* <AuthorizeView Roles="@AppData.GetAccessRights("ApplicationRoleEdit")"> *@
 <div class="fix-possition">
<WrPnlElm>
    <ControlQuickAccess>
              <input type="button" class="btn bnt-style-general" @onclick="@UpdateApplicationRole" value="Update">
              <input type="button" class="btn btn bnt-style-general" @onclick="@Cancel" value="Cancel">
    </ControlQuickAccess>
</WrPnlElm>
</div> 

<div class="under-cls">
<form>
    <div class="row">

        <div class="col-md-8  field-content">

            <div class="form-group">
                <label for="Code" class="control-lable">@L["Code"]</label>
                <input readonly="@readonlyMain1" form="Code" class="form-control" @bind="@objApplicationRole.Code" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-lable">@L["Name"]</label>
                <input readonly="@readonlyOther" form="Name" class="form-control" @bind="@objApplicationRole.Name" />
            </div>
            <div class="form-group">
                <label for="FullName" class="control-lable">@L["FullName"]</label>
                <input readonly="@readonlyOther" form="FullName" class="form-control" @bind="@objApplicationRole.Description" />
            </div>
            
            <div class="form-group">
                <label for="CreatedDate" class="control-lable">@L["CreatedDate"]</label>
                <input readonly="@readonlyMain1"  form="AlpCreatedDateha3" class="form-control" @bind="@objApplicationRole.CreatedDate" />
            </div>
        </div>

    </div>

 </form>
</div>
@* </AuthorizeView> *@
@code{


    [Parameter]
    public string CurrentID { get; set; }
    ApplicationRole objApplicationRole = new ApplicationRole();

    private bool readonlyMain1 {get;set;}=false;
    private bool readonlyMain2 {get;set;}=false;
    private bool readonlyOther {get;set;}=false;


 protected override void OnInitialized()
    //protected override async Task OnInitializedAsync()
    {
        //objApplicationRole = await Task.Run(() => objApplicationRoleController.GetApplicationRoleById(CurrentID));
        objApplicationRole = objApplicationRoleController.GetApplicationRoleById(CurrentID);
        
        readonlyMain1=AppData.readonlyMain1;
        readonlyMain2=AppData.readonlyMain2;
        readonlyOther=AppData.readonlyOther;
    }

    protected void UpdateApplicationRole()
    {
        objApplicationRoleController.UpdateApplicationRole(objApplicationRole);
       NavManager.NavigateTo("/Adm/ApplicationRoleViewStd/"+CurrentID);
    }
    void Cancel()
    {
      NavManager.NavigateTo("/Adm/ApplicationRoleViewStd/"+CurrentID);
    }
}
@page "/Adm/ApplicationUser/UserRoleEdit/{CurrentId}"
@inject ApplicationUserController SrvUser
@inject ApplicationRoleController SrvRole

<WrAuth PageName="ContactViewStd"><MainContent>  

    <div class="fix-possition">
        <WrPnlElm>
            <ControlQuickAccess>
                    <input type="button" class="btn btn bnt-style-general" @onclick="@Cancel" value="@trs.GetTranslation("Cancel",@AppData.ActiveUser,"General")">
                    <input type="button" class="btn bnt-style-general" @onclick="@UpdateRoles" value="@trs.GetTranslation("Update",@AppData.ActiveUser,"General")">
                        <label for="Code" class="control-lable">
                        &nbsp;&nbsp; &nbsp;&nbsp; @trs.GetTranslation("TheGroupsOfThisUser ",@AppData.ActiveUser,"Adm") &#58; &nbsp;@_objUser.Code &nbsp;&nbsp; @_objUser.UserName &nbsp;&nbsp; @_objUser.FirstName &nbsp; @_objUser.SecondName
                        </label>
            </ControlQuickAccess>
        </WrPnlElm>
    </div> 



<div class="under-cls">

  <div class="form-group">
    <div class="row-pnl-layout">

        <div class="column-pnl-layout ">
                        <div class="nav-pnl-layout">
                        @* &nbsp;&nbsp;  <input type="button" class="btn btn bnt-style-general"  value="TestBtn"> *@
                            &nbsp;&nbsp; @trs.GetTranslation("GrantedAccess",@AppData.ActiveUser,"Adm") 
                        </div>            
                    <WrDataGrid @ref="_gridVGetUserRole"
                                DataItems="_vGetUserRoleList"
                                Columns="@SrvRole.clmDef_VGetUserRole"  
                                SelectedRow="SelectedRowMeth"
                                UniqIdOfRecord="RoleId"
                                ColumnsToExcludeCSV="RoleId,RoleName,Description"
                                Paging="@(new PagingConfig
                                            {
                                                Enabled = true,
                                                CustomPager = false,
                                                PageSize = @AppData.rowNumMid
                                            })">
                        <ControlQuickAccess>
                            <WrSrchDGrid  OnSearchTextChanged="VGetUserRole_SchTxt"> </WrSrchDGrid>
                        </ControlQuickAccess>
                    </WrDataGrid>
                    
                
        </div>

        <div class="column-pnl-layout" style=" width: 60px; text-align: center;">
            <br><br><br><br><br>
            <button class="btn bnt-style-general" data-toggle="tooltip" title="GrantSelectedAccesses"><span class="fa fa-backward" aria-hidden="true"></span></button>
            <br><br>
            <button class="btn bnt-style-general" data-toggle="tooltip" title="DeleteSelectedAccesses"><span class="fa fa-forward" aria-hidden="true"></span></button>
            <br><br><br>
            <button class="btn bnt-style-general" data-toggle="tooltip" title="GrantAllAccesses"><span class="fa fa-fast-backward" aria-hidden="true"></span></button>
            <br><br>
            <button class="btn bnt-style-general" data-toggle="tooltip" title="DeleteAllAccesses"><span class="fa fa-fast-forward" aria-hidden="true"></span></button>
        </div>
        
        <div class="column-pnl-layout">
                <div class="nav-pnl-layout">
                    &nbsp;&nbsp; @trs.GetTranslation("NotGrantedAccess",@AppData.ActiveUser,"Adm")   
                </div>
                    <WrDataGrid @ref="_gridDiffRoleList"
                                DataItems="_diffRoleList"
                                Columns="@SrvRole.clmDef_Role"
                                SelectedRow="SelectedRowMeth"
                                UniqIdOfRecord="Id"
                                ColumnsToExcludeCSV="Id,Name"
                                Paging="@(new PagingConfig
                                            {
                                                Enabled = true,
                                                CustomPager = false,
                                                PageSize = @AppData.rowNumMid
                                            })">
                        <ControlQuickAccess>
                            <WrSrchDGrid  OnSearchTextChanged="DiffRoleList_SrchTxt"> </WrSrchDGrid>
                        </ControlQuickAccess>
                    </WrDataGrid>
        </div>
    </div>
  </div>

</div>             

</MainContent></WrAuth>

@code{

    #region  Declare
        [Parameter] public string CurrentId { get; set; }
        private string SelectedRow { get; set; } = "";
        private List<VGetUserRole> _vGetUserRoleList;       
        private List<ApplicationRole> _applicationRoleList; 
        private List<ApplicationRole> _diffRoleList;  
        private WrDataGrid<ApplicationRole> _gridDiffRoleList;      
        private WrDataGrid<VGetUserRole> _gridVGetUserRole; 
        private ApplicationUser _objUser = new ApplicationUser(); 

        [Parameter] public string SelectedId { get; set;}="0";   
    #endregion  Declare
    
    #region  BlazorMethods
        
         protected override void OnInitialized()
        //protected override async Task OnInitializedAsync()
        {
            SrvRole.Init_UserRoleEdit();
            _objUser = SrvUser.GetApplicationUserById(CurrentId);
            _vGetUserRoleList = SrvUser.GetUserRoleById(CurrentId).ToList();
            _applicationRoleList=SrvRole.GetApplicationRole().ToList();
            _diffRoleList   = _applicationRoleList.Where(x => _vGetUserRoleList.All(y => x.Id != y.RoleId)).ToList();
        } 

    #endregion  BlazorMethods

    #region  Event

        private void DiffRoleList_SrchTxt(ChangeEventArgs changeEventArgs)
        {
            string searchValue = changeEventArgs.Value.ToString();
            _diffRoleList = SrvRole.GetApplicationRoleByFiled(searchValue); 
            _gridDiffRoleList.GoToFirstPage();       
        }
        private void VGetUserRole_SchTxt(ChangeEventArgs changeEventArgs)
        {
            string searchValue = changeEventArgs.Value.ToString();
            _vGetUserRoleList = SrvRole.GetVGetUserRoleByFiled(searchValue, _objUser.Id);      
            _gridVGetUserRole.GoToFirstPage();  
        }
        private void SelectedRowMeth(string pSelectedRow)
        {
            SelectedRow = pSelectedRow;
            SelectedId = SelectedRow;
            //AppData.UserRoleEditRoleCode = SrvRole.GetApplicationRoleCodeById(selectedRow);
        }
       private  void UpdateRoles()
        {
            //SrvUser.UpdateRoles(objUser);
            NavManager.NavigateTo("/Adm/ApplicationUser/ViewStd/"+CurrentId);
        }
        void Cancel()
        {
            NavManager.NavigateTo("/Adm/ApplicationUser/ViewStd/"+CurrentId);
        }
    #endregion  Event

}